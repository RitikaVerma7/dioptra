[tox]
envlist = clean,pytest,black,isort,flake8,mypy,gitlint
isolated_build = True
skip_missing_interpreters = True
distshare = {toxinidir}/dist

[testenv]
extras = sdk
recreate = false

[testenv:pytest]
deps =
    coverage
    freezegun
    pytest>=6
    pytest-cov
    pytest-datadir
skip_install = false
commands = python -m pytest --cov=mitre.securingai.pyplugs --cov=mitre.securingai.restapi --cov=mitre.securingai.rq --cov-append --cov-report=term-missing --cov-report=html:coverage --import-mode=importlib {posargs} {toxinidir}/tests

[testenv:black]
deps =
    black>=20.8b1
skip_install = true
commands = black --config {toxinidir}/pyproject.toml --check --diff {toxinidir}/src/mitre/securingai

[testenv:isort]
deps =
    isort>=5.6.0
skip_install = true
commands = isort {toxinidir}/src/mitre/securingai -c -v

[testenv:flake8]
deps =
    flake8>=3.8.0
    flake8-bugbear
    mccabe
    pycodestyle
    pyflakes
skip_install = true
commands = flake8 {toxinidir}/src/mitre/securingai

[testenv:mypy]
deps =
    mypy
    mypy_extensions
    sqlalchemy-stubs
    typing-extensions
skip_install = true
commands = mypy {toxinidir}/src/mitre/securingai

[testenv:gitlint]
deps =
    gitlint
skip_install = true
commands = gitlint

[testenv:clean]
deps =
    coverage
skip_install = true
commands = coverage erase

[pytest]
addopts = -ra
testpaths = tests
log_cli = False
log_cli_level = INFO
markers =
    info: marks tests as info (deselect with '-m "not info"')

[coverage:run]
omit =
    restapi/config.py
    restapi/models.py
    # omit __init__.py files since they are just for mypy and pytest purposes
    */__init__.py

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only and type checking-only code:
    def __repr__
    if TYPE_CHECKING:

    # Don't complain if non-runnable code isn't run:
    \.\.\.
    if __name__ == .__main__.:
