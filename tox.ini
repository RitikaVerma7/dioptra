[tox]
envlist = clean,py37-{macos,linux},flake8,mypy
requires = tox-conda
isolated_build = True

[testenv]
platform =
    linux: linux
    macos: darwin
deps =
    Flask == 1.1.2
    flask-accepts == 0.17.0
    Flask-Injector == 0.12.3
    flask-restx == 0.2.0
    marshmallow == 3.5.2
    structlog == 20.1.0
    typing-extensions == 3.7.4.2
conda_deps =
    click == 7.1.1
    coverage == 5.0
    numpy == 1.18.1
    pandas == 1.0.3
    scipy == 1.4.1
    werkzeug == 1.0.1
    pytest == 5.4.1
    pytest-cov == 2.8.1
    pytest-datadir == 1.3.1
conda_channels =
    defaults
    conda-forge
recreate = false
install_command = pip install --cache-dir {toxworkdir}/.pip-cache {opts} {packages}
commands = pytest --cov=securingai --cov-append --cov-report=term-missing {posargs}

[testenv:flake8]
deps =
conda_deps =
    flake8 == 3.7.9
    flake8-bugbear == 20.1.4
    mccabe == 0.6.1
    pycodestyle == 2.5.0
    pyflakes == 2.1.1
conda_channels =
    defaults
    conda-forge
skip_install = true
commands = flake8 --exclude=inference.py src/securingai/ml_model_endpoint tests


[testenv:mypy]
deps =
    typing-extensions == 3.7.4.2
conda_deps =
    mypy == 0.770
    mypy_extensions == 0.4.3
conda_channels =
    defaults
    conda-forge
skip_install = true
commands = mypy src/securingai/ml_model_endpoint tests

[testenv:clean]
deps =
conda_deps =
    coverage == 5.0
conda_channels =
    defaults
skip_install = true
commands = coverage erase

[pytest]
addopts = -ra
testpaths = tests
log_cli = True
log_cli_level = INFO
markers =
    info: marks tests as info (deselect with '-m "not info"')

[coverage:run]
omit =
    # omit configuration files
    ml_model_endpoint/config.py
    # omit __init__.py files since they are just for mypy and pytest purposes
    */__init__.py

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only and type checking-only code:
    def __repr__
    if TYPE_CHECKING:

    # Don't complain if non-runnable code isn't run:
    \.\.\.
    if __name__ == .__main__.:
