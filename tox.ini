[tox]
envlist = clean,py{37,38}-{linux,macos}
isolated_build = True
skip_missing_interpreters = True

[testenv]
platform =
    linux: linux
    macos: darwin
deps =
    boto3
    Click
    coverage
    Flask
    flask-accepts
    Flask-Injector
    Flask-migrate
    flask-restx
    Flask-SQLAlchemy
    Flask-WTF
    freezegun
    injector
    marshmallow
    mlflow >= 1.11.0
    numpy
    pandas
    pytest
    pytest-cov
    pytest-datadir
    redis
    rq
    scipy
    structlog
    SQLAlchemy
    typing-extensions
    werkzeug
recreate = false
install_command = pip install --cache-dir {toxworkdir}/.pip-cache {opts} {packages}
commands = pytest --cov=mitre.securingai.restapi --cov-append --cov-report=term-missing --cov-report=html:coverage {posargs} tests/unit/restapi

[testenv:flake8]
deps =
    flake8
    flake8-bugbear
    mccabe
    pycodestyle
    pyflakes
skip_install = true
commands = flake8 src/mitre/securingai/restapi src/mitre/securingai/plugins

[testenv:mypy]
deps =
    mypy
    mypy_extensions
    typing-extensions
skip_install = true
commands = mypy src/mitre/securingai/restapi src/mitre/securingai/plugins

[testenv:clean]
deps =
    coverage
skip_install = true
commands = coverage erase

[pytest]
addopts = -ra
testpaths = tests
log_cli = True
log_cli_level = INFO
markers =
    info: marks tests as info (deselect with '-m "not info"')

[coverage:run]
omit =
    restapi/config.py
    restapi/models.py
    # omit __init__.py files since they are just for mypy and pytest purposes
    */__init__.py

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only and type checking-only code:
    def __repr__
    if TYPE_CHECKING:

    # Don't complain if non-runnable code isn't run:
    \.\.\.
    if __name__ == .__main__.:
