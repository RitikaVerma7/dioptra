name: tensorflow-patches

entry_points:
  deploy_mnist_patch:
    parameters:
      data_dir: {type: path, default: "/nfs/data/testing"}
      model: {type: string, default: "mnist_le_net/None"}
      out_dir: {type: string, default: "/out/data/adv_testing"}
      patch_dir: {type: path, default: "/out/data/adv_patches"}
      patch_deployment_method: {type: string, default: "augment"}
      patch_application_rate: {type: float, default: 1.0}
      patch_scale: {type: float, default: 0.4}
      batch_size: {type: int, default: 32}
      rotation_max: {type: float, default: 22.5}
      scale_min:  {type: float, default: 0.1}
      scale_max: {type: float, default: 1.0}
    command: >
      python src/deploy_patches.py
      --data-dir {data_dir}
      --model {model}
      --out-dir {out_dir}
      --patch-dir {patch_dir}
      --patch-deployment-method {patch_deployment_method}
      --patch-application-rate {patch_application_rate}
      --patch-scale {patch_scale}
      --batch-size {batch_size}
      --rotation-max {rotation_max}
      --scale-min {scale_min}
      --scale-max {scale_max}
  generate_mnist_patch:
    parameters:
      data_dir: {type: path, default: "/nfs/data/testing"}
      model: {type: string, default: "mnist_le_net/None"}
      model_architecture: {type: string, default: "le_net"}
      rotation_max: {type: float, default: 22.5}
      scale_min:  {type: float, default: 0.1}
      scale_max: {type: float, default: 1.0}
      learning_rate: {type: float, default: 5.0}
      max_iter: {type: int, default: 500}
      patch_target: {type: int, default: -1}
      num_patch: {type: int, default: 1}
      num_patch_gen_samples: {type: int, default: 20}
    command: >
      python src/patch.py
      --data-dir {data_dir}
      --model {model}
      --model-architecture {model_architecture}
      --rotation-max {rotation_max}
      --scale-min {scale_min}
      --scale-max {scale_max}
      --learning-rate {learning_rate}
      --max-iter {max_iter}
      --patch-target {patch_target}
      --num-patch {num_patch}
      --num-patch-gen-samples {num_patch_gen_samples}
  mnist_train:
    parameters:
      data_dir_train: {type: path, default: "/nfs/data/training"}
      data_dir_test: {type: path, default: "/nfs/data/testing"}
      model_architecture: {type: string, default: "le_net"}
      model_tag:  {type: string, default: "mnist_"}
      epochs: {type: float, default: 30}
      batch_size: {type: float, default: 32}
      learning_rate: {type: float, default: 0.001}
      optimizer: {type: string, default: "adam"}
      validation_split: {type: float, default: 0.2}
    command: >
      python src/train.py
      --data-dir-train {data_dir_train}
      --data-dir-test {data_dir_test}
      --model-architecture {model_architecture}
      --model-tag {model_tag}
      --epochs {epochs}
      --batch-size {batch_size}
      --learning-rate {learning_rate}
      --optimizer {optimizer}
      --validation-split {validation_split}
  mnist_test:
    parameters:
      data_dir: {type: path, default: "/out/data/adv_testing"}
      model_architecture: {type: string, default: "le_net"}
      model_name:  {type: string, default: "mnist_le_net/None"}
      batch_size: {type: float, default: 32}
    command: >
      python src/test.py
      --data-dir {data_dir}
      --model-architecture {model_architecture}
      --batch-size {batch_size}
      --model-name {model_name}