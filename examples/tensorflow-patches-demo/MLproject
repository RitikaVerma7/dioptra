name: tensorflow-mnist-classifier

entry_points:
  gen_patch:
    parameters:
      data_dir: {type: path, default: "/nfs/data"}
      model: {type: string, default: "mnist_le_net/1"}
      model_architecture: {type: string, default: "vgg16"}
      rotation_max: {type: float, default: 22.5}
      scale_min: {type: float, default: 0.1}
      scale_max: {type: float, default: 1.0}
      learning_rate: {type: float, default: 5.0}
      max_iter: {type: int, default: 500}
      patch_target: {type: int, default: -1}
      num_patch: {type: int, default: 1}
      num_patch_gen_samples: {type: int, default: 10}
      seed: {type: float, default: -1}
    command: >
      python src/gen_patch.py
      --data-dir {data_dir}
      --model {model}
      --model-architecture {model_architecture}
      --rotation-max {rotation_max}
      --scale-max {scale_max}
      --scale-min {scale_min}
      --learning-rate {learning_rate}
      --max-iter {max_iter}
      --patch-target {patch_target}
      --num-patch {num_patch}
      --num-patch-gen-samples {num_patch_gen_samples}
      --seed {seed}

  deploy_patch:
    parameters:
      run_id: {type: string}
      data_dir: {type: path, default: "/nfs/data"}
      model: {type: string, default: "mnist_le_net/1"}
      model_architecture: {type: string, default: "vgg16"}
      patch_deployment_method: {type: string, default: "augment"}
      patch_application_rate: {type: string, default: 1.0}
      patch_scale: {type: float, default: 0.4}
      batch_size: {type: float, default: 32}
      rotation_max: {type: float, default: 22.5}
      scale_min: {type: float, default: 0.1}
      scale_max: {type: float, default: 1.0}
      seed: {type: float, default: -1}
    command: >
      python src/deploy_patch.py
      --run-id {run_id}
      --data-dir {data_dir}
      --model {model}
      --model-architecture {model_architecture}
      --patch-deployment-method {patch_deployment_method}
      --patch-application-rate {patch_application_rate}
      --patch-scale {patch_scale}
      --batch-size {batch_size}
      --rotation-max {rotation_max}
      --scale-max {scale_max}
      --scale-min {scale_min}
      --seed {seed}

  init_model:
    parameters:
      data_dir: {type: path, default: "/nfs/data/ImageNet-Kaggle-2017/images/ILSVRC/Data/CLS-LOC/val-sorted-5000"}
      model_tag: {type: string, default: "default_pretrained"}
      model_architecture: {type: string, default: "resnet50"}
      batch_size: {type: float, default: 10}
      seed: {type: float, default: -1}
    command: >
      python src/init_model.py
      --data-dir {data_dir}
      --model-tag {model_tag}
      --model-architecture {model_architecture}
      --batch-size {batch_size}
      --seed {seed}

  infer:
    parameters:
      run_id: {type: string}
      model: {type: string, default: "mnist_le_net/1"}
      model_architecture: {type: string, default: "le_net"}
      batch_size: {type: float, default: 32}
      seed: {type: float, default: -1}
      dataset_tar_name: {type: string, default: "testing_adversarial_fgm.tar.gz"}
      dataset_name: {type: string, default: "adv_testing"}
    command: >
      python src/infer.py
      --run-id {run_id}
      --model {model}
      --model-architecture {model_architecture}
      --batch-size {batch_size}
      --seed {seed}
      --dataset-tar-name {dataset_tar_name}
      --dataset-name {dataset_name}

  train:
    parameters:
      model_tag: {type: string, default: ""}
      data_dir_train: {type: path, default: "/nfs/data/training"}
      data_dir_test: {type: path, default: "/nfs/data/testing"}
      model_architecture: {type: string, default: "vgg16"}
      epochs: {type: float, default: 30}
      batch_size: {type: float, default: 32}
      register_model: {type: string, default: "False"}
      learning_rate: {type: float, default: 0.001}
      optimizer: {type: string, default: "adam"}
      validation_split: {type: float, default: 0.2}
      load_dataset_from_mlruns: {type: string, default: "False"}
      testing_dataset_run_id: {type: string, default: "None"}
      training_dataset_run_id: {type: string, default: "None"}
      seed: {type: float, default: -1}
    command: >
      python src/train.py
      --data-dir-train {data_dir_train}
      --data-dir-test {data_dir_test}
      --model-architecture {model_architecture}
      --model-tag {model_tag}
      --epochs {epochs}
      --batch-size {batch_size}
      --register-model {register_model}
      --learning-rate {learning_rate}
      --optimizer {optimizer}
      --validation-split {validation_split}
      --load-dataset-from-mlruns {load_dataset_from_mlruns}
      --testing-dataset-run-id {testing_dataset_run_id}
      --training-dataset-run-id {training_dataset_run_id}
      --seed {seed}
