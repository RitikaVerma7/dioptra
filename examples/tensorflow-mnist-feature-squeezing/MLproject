name: feature_squeeze_mnist

entry_points:
  jsma:
    parameters:
      data_dir: {type: path, default: "/nfs/data"}
      model: {type: string, default: "mnist_le_net/1"}
      model_architecture: {type: string, default: "le_net"}
      batch_size: {type: float, default: 32}
      seed: {type: float, default: -1}
      verbose: {type: string, default: "True"}
      theta: {type: float, default: 0.1}
      gamma: {type: float, default: 1.0}
    command: >
      python src/jsma.py
      --data-dir {data_dir}
      --model {model}
      --model-architecture {model_architecture}
      --batch-size {batch_size}
      --seed {seed}
      --theta {theta}
      --gamma {gamma}
      --verbose {verbose}

  deepfool:
    parameters:
      data_dir: {type: path, default: "/nfs/data"}
      model: {type: string, default: "mnist_le_net/1"}
      model_architecture: {type: string, default: "le_net"}
      batch_size: {type: float, default: 40}
      seed: {type: float, default: -1}
      max_iter: {type: float, default: 10}
      nb_grads: {type: float, default: 10}
      epsilon: {type: float, default: 0.000001}
      verbose: {type: string, default: "True"}
    command: >
      python src/deepfool.py
      --data-dir {data_dir}
      --model {model}
      --model-architecture {model_architecture}
      --batch-size {batch_size}
      --seed {seed}
      --max-iter {max_iter}
      --nb-grads {nb_grads}
      --epsilon {epsilon}
      --verbose {verbose}

  cw:
    parameters:
      data_dir: {type: path, default: "/nfs/data"}
      model: {type: string, default: "mnist_le_net/1"}
      model_architecture: {type: string, default: "le_net"}
      batch_size: {type: float, default: 1}
      seed: {type: float, default: -1}
      confidence: {type: float, default: 0.0}
      targeted: {type: string, default: "False"}
      learning_rate: {type: float, default: 0.01}
      binary_search_steps: {type: float, default: 10.0}
      max_iter: {type: float, default: 10}
      initial_const: {type: float, default: 0.01}
      max_doubling: {type: float, default: 5}
      max_halving: {type: float, default: 5}
      verbose: {type: string, default: "True"}
    command: >
      python src/cw.py
      --data-dir {data_dir}
      --model {model}
      --model-architecture {model_architecture}
      --batch-size {batch_size}
      --seed {seed}
      --confidence {confidence}
      --targeted {targeted}
      --learning-rate {learning_rate}
      --binary-search-steps {binary_search_steps}
      --max-iter {max_iter}
      --initial-const {initial_const}
      --max-doubling {max_doubling}
      --max-halving {max_halving}
      --verbose {verbose}

  cw_inf:
    parameters:
      data_dir: {type: path, default: "/nfs/data"}
      model: {type: string, default: "mnist_le_net/1"}
      model_architecture: {type: string, default: "le_net"}
      batch_size: {type: float, default: 1}
      seed: {type: float, default: -1}
      confidence: {type: float, default: 0.0}
      targeted: {type: string, default: "False"}
      learning_rate: {type: float, default: 0.01}
      max_iter: {type:float, default: 10}
      max_doubling: {type: float, default: 5}
      max_halving: {type: float, default: 5}
      verbose: {type: string, default: "True"}
    command: >
      python src/cw_inf.py
      --data-dir {data_dir}
      --model {model}
      --model-architecture {model_architecture}
      --batch-size {batch_size}
      --seed {seed}
      --confidence {confidence}
      --targeted {targeted}
      --learning-rate {learning_rate}
      --max-iter {max_iter}
      --max-doubling {max_doubling}
      --max-halving {max_halving}
      --verbose {verbose}

  fgm:
    parameters:
      data_dir: {type: path, default: "/nfs/data"}
      model: {type: string, default: "mnist_le_net/1"}
      model_architecture: {type: string, default: "le_net"}
      batch_size: {type: float, default: 32}
      eps: {type: float, default: 0.3}
      eps_step: {type: float, default: 0.1}
      minimal: {type: float, default: 0}
      norm: {type: string, default: "inf"}
      seed: {type: float, default: -1}
    command: >
      python src/fgm.py
      --data-dir {data_dir}
      --model {model}
      --model-architecture {model_architecture}
      --batch-size {batch_size}
      --eps {eps}
      --eps-step {eps_step}
      --minimal {minimal}
      --norm {norm}
      --seed {seed}

  infer:
    parameters:
      run_id: {type: string}
      model: {type: string, default: "mnist_le_net/1"}
      model_architecture: {type: string, default: "le_net"}
      batch_size: {type: float, default: 32}
      seed: {type: float, default: -1}
    command: >
      python src/infer.py
      --run-id {run_id}
      --model {model}
      --model-architecture {model_architecture}
      --batch-size {batch_size}
      --seed {seed}

  feature_squeeze:
    parameters:
      data_dir: {type: path, default: "/nfs/data"}
      run_id: {type: string}
      model: {type: string, default: "mnist_le_net/1"}
      model_architecture: {type: string, default: "le_net"}
      batch_size: {type: float, default: 32}
      seed: {type: float, default: -1}
      bit_depth: {type: float, default: 8}
    command: >
      python src/feature_squeeze.py
      --data-dir {data_dir}
      --run-id {run_id}
      --model {model}
      --model-architecture {model_architecture}
      --batch-size {batch_size}
      --seed {seed}
      --bit-depth {bit_depth}

  init_model:
    parameters:
      data_dir: {type: path, default: "/nfs/data"}
      model_architecture: {type: string, default: "resnet50"}
      model_tag: {type: string, default: "default_pretrained"}
      batch_size: {type: float, default: 32}
      seed: {type: float, default: -1}
    command: >
      python src/init_model.py
      --data-dir {data_dir}
      --model-architecture {model_architecture}
      --model-tag {model_tag}
      --batch-size {batch_size}
      --seed {seed}

  train:
    parameters:
      data_dir: {type: path, default: "/nfs/data"}
      model_architecture: {type: string, default: "le_net"}
      epochs: {type: float, default: 30}
      batch_size: {type: float, default: 32}
      register_model: {type: string, default: "False"}
      learning_rate: {type: float, default: 0.001}
      optimizer: {type: string, default: "adam"}
      validation_split: {type: float, default: 0.2}
      seed: {type: float, default: -1}
    command: >
      python src/train.py
      --data-dir {data_dir}
      --model-architecture {model_architecture}
      --epochs {epochs}
      --batch-size {batch_size}
      --register-model {register_model}
      --learning-rate {learning_rate}
      --optimizer {optimizer}
      --validation-split {validation_split}
      --seed {seed}
