# NOTICE
#
# This software (or technical data) was produced for the U. S. Government under
# contract SB-1341-14-CQ-0010, and is subject to the Rights in Data-General Clause
# 52.227-14, Alt. IV (DEC 2007)
#
# Â© 2021 The MITRE Corporation.
name: tensorflow-mnist-classifier

entry_points:
  fgm:
    parameters:
      data_dir: { type: path, default: "/nfs/data" }
      image_size: { type: string, default: "28,28,1" }
      adv_tar_name: { type: string, default: "testing_adversarial_fgm.tar.gz" }
      adv_data_dir: { type: string, default: "adv_testing" }
      model_name: { type: string, default: "mnist_le_net" }
      model_version: { type: string, default: "1" }
      batch_size: { type: float, default: 32 }
      eps: { type: float, default: 0.3 }
      eps_step: { type: float, default: 0.1 }
      minimal: { type: float, default: 0 }
      norm: { type: string, default: "inf" }
      seed: { type: float, default: -1 }
    command: >
      python src/fgm.py
      --data-dir {data_dir}
      --image-size {image_size}
      --adv-tar-name {adv_tar_name}
      --adv-data-dir {adv_data_dir}
      --model-name {model_name}
      --model-version {model_version}
      --batch-size {batch_size}
      --eps {eps}
      --eps-step {eps_step}
      --minimal {minimal}
      --norm {norm}
      --seed {seed}

  infer:
    parameters:
      run_id: { type: string }
      image_size: { type: string, default: "28,28,1" }
      model_name: { type: string, default: "mnist_le_net" }
      model_version: { type: string, default: "1" }
      adv_tar_name: { type: string, default: "testing_adversarial_fgm.tar.gz" }
      adv_data_dir: { type: string, default: "adv_testing" }
      seed: { type: float, default: -1 }
    command: >
      python src/infer.py
      --run-id {run_id}
      --image-size {image_size}
      --model-name {model_name}
      --model-version {model_version}
      --adv-tar-name {adv_tar_name}
      --adv-data-dir {adv_data_dir}
      --seed {seed}

  train:
    parameters:
      data_dir: { type: path, default: "/nfs/data" }
      image_size: { type: string, default: "28,28,1" }
      model_architecture: { type: string, default: "le_net" }
      epochs: { type: float, default: 30 }
      batch_size: { type: float, default: 32 }
      register_model_name: { type: string, default: "" }
      learning_rate: { type: float, default: 0.001 }
      optimizer: { type: string, default: "Adam" }
      validation_split: { type: float, default: 0.2 }
      seed: { type: float, default: -1 }
    command: >
      python src/train.py
      --data-dir {data_dir}
      --image-size {image_size}
      --model-architecture {model_architecture}
      --epochs {epochs}
      --batch-size {batch_size}
      --register-model-name {register_model_name}
      --learning-rate {learning_rate}
      --optimizer {optimizer}
      --validation-split {validation_split}
      --seed {seed}
