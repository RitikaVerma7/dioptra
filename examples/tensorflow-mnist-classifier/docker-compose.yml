
version: "2.4"

networks:
  lab_deployment_backend:
  lab_deployment_frontend:

services:
  redis:
    image: redis:latest
    init: true
    restart: always
    hostname: redis
    container_name: redis
    cpuset: 0-1
    cpu_shares: 256
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 30
    command: redis-server --appendonly yes
    networks:
      - lab_deployment_backend
    volumes:
      - redis-data:/data

  minio:
    image: minio/minio:latest
    init: true
    restart: always
    hostname: minio
    container_name: minio
    command: server /data
    cpuset: 0-1
    cpu_shares: 256
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    networks:
      - lab_deployment_backend
    volumes:
      - minio-data:/data

  mlflow-tracking:
    image: securing-ai/mlflow-tracking:latest
    init: true
    restart: always
    hostname: mlflow-tracking
    container_name: mlflow-tracking
    cpuset: 0-1
    cpu_shares: 256
    depends_on:
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nginx:35000"]
      interval: 30s
      timeout: 10s
      retries: 3
    command:
      - --host
      - "0.0.0.0"
      - --default-artifact-root
      - "s3://mlflow-tracking/artifacts"
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    networks:
      - lab_deployment_backend
      - lab_deployment_frontend
    volumes:
      - mlflow-tracking-data:/work/mlruns

  nginx:
    image: securing-ai/nginx:latest
    init: true
    restart: always
    hostname: nginx
    container_name: nginx
    cpuset: 0-1
    cpu_shares: 256
    depends_on:
      - mlflow-tracking
      - restapi
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:35000",
          "&&",
          "curl",
          "-f",
          "http://localhost:30080",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - lab_deployment_frontend
    ports:
      - "35000:35000/tcp"
      - "30080:30080/tcp"

  restapi:
    image: securing-ai/restapi:latest
    init: true
    restart: always
    hostname: restapi
    container_name: restapi
    cpuset: 0-1
    cpu_shares: 256
    depends_on:
      - minio
      - mlflow-tracking
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nginx:30080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      AI_RESTAPI_DATABASE_URI: sqlite:////work/data/securingai.db
      AI_RESTAPI_DEV_DATABASE_URI: sqlite:////work/data/securingai-dev.db
      AI_RESTAPI_ENV: prod
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_TRACKING_URI: http://mlflow-tracking:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      RQ_REDIS_URI: redis://redis:6379/0
    networks:
      - lab_deployment_backend
      - lab_deployment_frontend
    volumes:
      - restapi-data:/work/data

  tfcpu-01:
    image: securing-ai/tensorflow2-cpu:latest
    init: true
    restart: always
    hostname: tfcpu-01
    container_name: tfcpu-01
    cpuset: 0-5
    cpu_shares: 1024
    environment:
      AI_RESTAPI_DATABASE_URI: sqlite:////work/data/securingai.db
      AI_RESTAPI_DEV_DATABASE_URI: sqlite:////work/data/securingai-dev.db
      AI_RESTAPI_ENV: prod
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_TRACKING_URI: http://mlflow-tracking:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      KMP_AFFINITY: "none"
      KMP_BLOCKTIME: "1"
      KMP_SETTINGS: "FALSE"
      OMP_PROC_BIND: "false"
      RQ_REDIS_URI: redis://redis:6379/0
      TF_CPP_MIN_LOG_LEVEL: "2"
    command:
      - tensorflow_cpu
    networks:
      - lab_deployment_backend
    volumes:
      - nfs-datasets:/nfs/data
      - restapi-data:/work/data

  tfcpu-02:
    image: securing-ai/tensorflow2-cpu:latest
    init: true
    restart: always
    hostname: tfcpu-02
    container_name: tfcpu-02
    cpuset: 0-5
    cpu_shares: 1024
    environment:
      AI_RESTAPI_DATABASE_URI: sqlite:////work/data/securingai.db
      AI_RESTAPI_DEV_DATABASE_URI: sqlite:////work/data/securingai-dev.db
      AI_RESTAPI_ENV: prod
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_TRACKING_URI: http://mlflow-tracking:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      KMP_AFFINITY: "none"
      KMP_BLOCKTIME: "1"
      KMP_SETTINGS: "FALSE"
      OMP_PROC_BIND: "false"
      RQ_REDIS_URI: redis://redis:6379/0
      TF_CPP_MIN_LOG_LEVEL: "2"
    command:
      - tensorflow_cpu
    networks:
      - lab_deployment_backend
    volumes:
      - nfs-datasets:/nfs/data
      - restapi-data:/work/data

volumes:
  nfs-datasets:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data
  minio-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/s3
  mlflow-tracking-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/mlruns
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/redis
  restapi-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/restapi
