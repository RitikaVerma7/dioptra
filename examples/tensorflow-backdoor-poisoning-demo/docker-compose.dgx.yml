
version: "3.7"

networks:
  username:

services:
  redis-username:
    image: redis:latest
    init: true
    restart: always
    hostname: redis-username
    container_name: redis-username
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 30
    networks:
      - username

  minio-username:
    image: minio/minio:RELEASE.2020-09-02T18-19-50Z
    init: true
    restart: always
    hostname: minio-username
    container_name: minio-username
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    networks:
      - username
    volumes:
      - type: bind
        source: ./s3
        target: /data

  mlflow-tracking-username:
    image: securing-ai/mlflow-tracking:0.0.0-1
    init: true
    restart: always
    hostname: mlflow-tracking-username
    container_name: mlflow-tracking-username
    depends_on:
      - minio-username
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nginx-username:35000"]
      interval: 30s
      timeout: 10s
      retries: 3
    command:
      - --host
      - "0.0.0.0"
      - --default-artifact-root
      - "s3://mlflow-tracking/artifacts"
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_S3_ENDPOINT_URL: http://minio-username:9000
    networks:
      - username
    volumes:
      - type: bind
        source: ./mlruns
        target: /work/mlruns

  nginx-username:
    image: securing-ai/nginx:0.0.0-1
    init: true
    restart: always
    hostname: nginx-username
    container_name: nginx-username
    depends_on:
      - mlflow-tracking-username
      - restapi-username
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:35000",
          "&&",
          "curl",
          "-f",
          "http://localhost:30080",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    command:
      - --ai-lab-host
      - restapi-username
      - --mlflow-tracking-host
      - mlflow-tracking-username
    ports:
      - target: 35000
        published: 35000
        protocol: tcp
        mode: host
      - target: 30080
        published: 30080
        protocol: tcp
        mode: host
    networks:
      - username

  restapi-username:
    image: securing-ai/restapi:0.0.0-1
    init: true
    restart: always
    hostname: restapi-username
    container_name: restapi-username
    depends_on:
      - minio-username
      - mlflow-tracking-username
      - redis-username
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nginx-username:30080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      AI_RESTAPI_DATABASE_URI: sqlite:////work/data/securingai.db
      AI_RESTAPI_DEV_DATABASE_URI: sqlite:////work/data/securingai-dev.db
      AI_RESTAPI_ENV: prod
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_TRACKING_URI: http://mlflow-tracking-username:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio-username:9000
      RQ_REDIS_URI: redis://redis-username:6379/0
    networks:
      - username
    volumes:
      - type: bind
        source: ./restapi
        target: /work/data

  tfcpu-01-username:
    image: securing-ai/tensorflow2-cpu-py37:0.0.0-1
    init: true
    restart: always
    hostname: tfcpu-01-username
    container_name: tfcpu-01-username
    environment:
      AI_RESTAPI_DATABASE_URI: sqlite:////work/data/securingai.db
      AI_RESTAPI_DEV_DATABASE_URI: sqlite:////work/data/securingai-dev.db
      AI_RESTAPI_ENV: prod
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_TRACKING_URI: http://mlflow-tracking-username:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio-username:9000
      KMP_AFFINITY: "none"
      KMP_BLOCKTIME: "1"
      KMP_SETTINGS: "FALSE"
      OMP_PROC_BIND: "false"
      RQ_REDIS_URI: redis://redis-username:6379/0
      TF_CPP_MIN_LOG_LEVEL: "2"
    command:
      - tensorflow_cpu
    networks:
      - username
    volumes:
      - type: bind
        source: ./data
        target: /nfs/data
      - type: bind
        source: ./restapi
        target: /work/data

  tfcpu-02-username:
    image: securing-ai/tensorflow2-cpu-py37:0.0.0-1
    init: true
    restart: always
    hostname: tfcpu-02-username
    container_name: tfcpu-02-username
    environment:
      AI_RESTAPI_DATABASE_URI: sqlite:////work/data/securingai.db
      AI_RESTAPI_DEV_DATABASE_URI: sqlite:////work/data/securingai-dev.db
      AI_RESTAPI_ENV: prod
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_TRACKING_URI: http://mlflow-tracking-username:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio-username:9000
      KMP_AFFINITY: "none"
      KMP_BLOCKTIME: "1"
      KMP_SETTINGS: "FALSE"
      OMP_PROC_BIND: "false"
      RQ_REDIS_URI: redis://redis-username:6379/0
      TF_CPP_MIN_LOG_LEVEL: "2"
    command:
      - tensorflow_cpu
    networks:
      - username
    volumes:
      - type: bind
        source: ./data
        target: /nfs/data
      - type: bind
        source: ./restapi
        target: /work/data
